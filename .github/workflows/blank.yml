name: Archive Java Files and Generate Report

on: [push]

permissions:
  contents: write

jobs:
  archive-and-report:
    runs-on: ubuntu-latest

    if: github.actor != 'github-actions[bot]'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Git identity
        run: |
          git config --global user.name "MartinRavenel"
          git config --global user.email "matt-76R@hotmail.com"

      - name: Set timestamp and archive/report filenames
        id: vars
        run: |
          DATE=$(date +"%Y%m%d-%H%M%S")
          echo "DATE=$DATE" >> $GITHUB_OUTPUT
          echo "ARCHIVE_NAME=archive_$DATE.zip" >> $GITHUB_OUTPUT
          echo "RAPPORT_NAME=rapport_$DATE.txt" >> $GITHUB_OUTPUT

      - name: Find previous archive file (if any)
        id: previous
        run: |
          PREV=$(ls archive_*.zip 2>/dev/null | sort | tail -n 1)
          echo "PREVIOUS_ARCHIVE=$PREV" >> $GITHUB_OUTPUT

      - name: Archive all .java files
        run: |
          zip -r ${{ steps.vars.outputs.ARCHIVE_NAME }} *.java || echo "No .java files found."

      - name: List contents of current archive
        run: |
          unzip -l ${{ steps.vars.outputs.ARCHIVE_NAME }} > current_list.txt

      - name: List contents of previous archive (if exists)
        if: steps.previous.outputs.PREVIOUS_ARCHIVE != ''
        run: |
          unzip -l ${{ steps.previous.outputs.PREVIOUS_ARCHIVE }} > previous_list.txt

      - name: Generate rapport_YYYYMMDD-HHMMSS.txt
        run: |
          echo "üóì Rapport g√©n√©r√© le ${{ steps.vars.outputs.DATE }}" > ${{ steps.vars.outputs.RAPPORT_NAME }}
          echo "" >> ${{ steps.vars.outputs.RAPPORT_NAME }}
          echo "üì¶ Contenu de l‚Äôarchive actuelle : ${{ steps.vars.outputs.ARCHIVE_NAME }}" >> ${{ steps.vars.outputs.RAPPORT_NAME }}
          echo "--------------------------------------------------" >> ${{ steps.vars.outputs.RAPPORT_NAME }}
          cat current_list.txt >> ${{ steps.vars.outputs.RAPPORT_NAME }}
          echo "" >> ${{ steps.vars.outputs.RAPPORT_NAME }}

          if [ -f previous_list.txt ]; then
            echo "üìÑ Diff√©rences avec la pr√©c√©dente archive : ${{ steps.previous.outputs.PREVIOUS_ARCHIVE }}" >> ${{ steps.vars.outputs.RAPPORT_NAME }}
            echo "--------------------------------------------------" >> ${{ steps.vars.outputs.RAPPORT_NAME }}
            diff -u previous_list.txt current_list.txt >> ${{ steps.vars.outputs.RAPPORT_NAME }} || true
          else
            echo "‚ÑπÔ∏è Aucune archive pr√©c√©dente trouv√©e." >> ${{ steps.vars.outputs.RAPPORT_NAME }}
          fi

      - name: Commit and push archive + report
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git add ${{ steps.vars.outputs.ARCHIVE_NAME }} ${{ steps.vars.outputs.RAPPORT_NAME }}
          git commit -m "üì¶ Archive et rapport g√©n√©r√©s le ${{ steps.vars.outputs.DATE }}" || echo "Nothing to commit"
          git push https://x-access-token:${TOKEN}@github.com/${{ github.repository }} HEAD:${{ github.ref_name }}
